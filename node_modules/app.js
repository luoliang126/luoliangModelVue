/**
 * Created by ly on 2016/11/30.
 */
var express = require('express');
var app = express();

//访问根目录时，返回的路径(即入口文件，如果不配制默认为index.html)
app.get('/', function (req, res) {
    //console.log(123);
    res.sendfile("./public/index.html");
})

//  POST请求
//app.post('/', function (req, res) {
//    console.log("POST");
//    res.send('Hello POST');
//})

//静态文件访问路径(将文件夹public暴露出去供客户端访问 eg：http://localhost:8081/index.htmlContent 而不是http://localhost:8081/public/index.htmlContent)
app.use(express.static('public'));

//app.get('/success', function (req, res) {
//    //console.log(req.query.username);
//    if(req.query.username == "luoliang"){
//        res.sendfile("public/htmlContent/main.htmlContent");
//    }
//})


//mongodb引入
var mongodb = require('mongodb');
//建立数据库连接,最底层直接操作数据库
var dataBase = require("./dao/dataBase");
dataBase.getConn();

//挂靠路由
var userRoutes = require('./routes/userRoutes');  //寻找路由routes下的userRoutes.js
app.use('/userRoutes', userRoutes);  // userRoutes即为我们需要广播出去的地址(也叫根目录，在该地址下有一个叫userRoutes的子路径，那么ajax的url就应该是 /userRoutes/......，eg：/userRoutes/login,登录路径),后面一个userRoutes即为上方引入进来的userRoutes

//连接数据库
//var mysql = require('mysql');
//mysql数据库连接
//var connection = mysql.createConnection({
//    host: 'localhost',
//    user: 'root',
//    password: '',
//    database:'mydb'
//});

//connection.connect();
////查询
//connection.query('SELECT 1 + 1 AS solution', function(err, rows, fields) {
//    if (err) throw err;
//    console.log('The solution is: ', rows[0].solution);
//});
////关闭连接
//connection.end();


//nodejs中搭建websocket服务
//var WebSocketServer = require('ws').Server;
//var wss = new WebSocketServer({ port: 8080 });
//wss.on('connection', function (ws) {
//    //console.log('client connected'); //接收客户端发来的连接请求，连接成功以后，执行回调函数，才能接收消息。
//    ws.on('message', function (message) {
//        console.log(message);
//        ws.send(message);
//    });
//});

//nodejs中搭建websocket.io实现聊天功能
//var server1 = require('http').createServer(app);
//var io = require('socket.io')(server1);
//server1.listen(8000);
//io.on('connection', function(socket) {
//    //接收并处理客户端的hi事件
//    socket.on('user-service', function(data) {
//        console.log(data);
//        //触发客户端事件c_hi
//        socket.emit('service-user',data); //向自己发送消息
//        socket.broadcast.emit('outMsg',data); ////用于向整个网络广播(除自己之外)
//    })
//    //断开事件
//    //socket.on('disconnect', function(data) {
//    //    console.log('断开',data)
//    //    socket.emit('c_leave','离开');
//    //})
//});

var server = app.listen(8082, function () {
    var host = server.address().address
    var port = server.address().port
    console.log("app start");
})